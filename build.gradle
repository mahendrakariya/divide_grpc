// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'com.google.protobuf'

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
  }
}

protobuf {
  generatedFilesBaseDir = "$projectDir/src"
  protoc {
    artifact = "com.google.protobuf:protoc:3.9.0"
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.23.0'
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {
      }
    }
  }
}
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'src/main/grpc'
        }
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'com.google.protobuf:protobuf-java:3.9.0'
    compile "io.grpc:grpc-protobuf:1.23.0"
    compile "io.grpc:grpc-stub:1.23.0"
    compile "com.google.protobuf:protobuf-java-util:3.9.0"
    compile 'javax.annotation:javax.annotation-api:1.3.2'
    compile 'io.grpc:grpc-all:1.23.0'
    compile 'io.grpc:grpc-core:1.23.0'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}


jar {
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes 'Main-Class': 'DivideServer'
    }
}